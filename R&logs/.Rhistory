print(sdata)
cwdata <- sqldf(sprintf('select
Y,M,D
,case when p_name=\'A1\' then sum(state) else 0 end as A
,case when p_name=\'B1\' then sum(state) else 0 end as B
from sdata
group by Y,M,D,p_name'));
f_mdata <- sqldf(sprintf('select M,sum(A) as A,sum(B) as B from cwdata where Y=2021 group by M '));
print(f_mdata);
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
cwdata <- sqldf(sprintf('select
Y,M,D
,case when p_name=\'A1\' then sum(state) else 0 end as A
,case when p_name=\'B1\' then sum(state) else 0 end as B
from sdata
group by Y,M,D,p_name'));
f_mdata <- sqldf(sprintf('select M,sum(A) as A,sum(B) as B from cwdata where Y=2021 group by M '));
print(f_mdata);
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
cwdata <- sqldf(sprintf('select
Y,M,D
,case when p_name=\'A1\' then sum(state) else 0 end as A
,case when p_name=\'B1\' then sum(state) else 0 end as B
from sdata
group by Y,M,D,p_name'));
f_mdata <- sqldf(sprintf('select M,sum(A) as A,sum(B) as B from cwdata where Y=2021 group by M '));
print(f_mdata);
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
cwdata <- sqldf(sprintf('select
Y,M,D
,case when p_name=\'A1\' then sum(state) else 0 end as A
,case when p_name=\'B1\' then sum(state) else 0 end as B
from sdata
group by Y,M,D,p_name'));
f_mdata <- sqldf(sprintf('select M,sum(A) as A,sum(B) as B from cwdata where Y=2021 group by M '));
print(f_mdata);
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
print(data)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
print(data)
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
sdata <- sqldf(sprintf('select p_name,sum(state)as state from data group by p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','D','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,D,p_name,sum(state)as state from data group by Y,M,D,p_name'));
print(sdata)
cwdata <- sqldf(sprintf('select
Y,M,D
,case when p_name=\'A\' then sum(state) else 0 end as A
,case when p_name=\'B\' then sum(state) else 0 end as B
,case when p_name=\'C\' then sum(state) else 0 end as C
,case when p_name=\'D\' then sum(state) else 0 end as D
,case when p_name=\'E\' then sum(state) else 0 end as E
,case when p_name=\'F\' then sum(state) else 0 end as F
,case when p_name=\'G\' then sum(state) else 0 end as G
,case when p_name=\'H\' then sum(state) else 0 end as H
from sdata
group by Y,M,D,p_name'));
f_mdata <- sqldf(sprintf('select M,sum(A) as A,sum(B) as B,sum(C) as C,sum(D) as D,sum(E) as E,sum(F) as F,sum(G) as G,sum(H) as H from cwdata where Y=2021 group by M '));
print(f_mdata);
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,DD,p_name,sum(state)as state from data group by Y,M,DD,p_name'));
print(sdata)
cwdata <- sqldf(sprintf('select
Y,M,DD
,case when p_name=\'A\' then sum(state) else 0 end as A
,case when p_name=\'B\' then sum(state) else 0 end as B
,case when p_name=\'C\' then sum(state) else 0 end as C
,case when p_name=\'D\' then sum(state) else 0 end as D
,case when p_name=\'E\' then sum(state) else 0 end as E
,case when p_name=\'F\' then sum(state) else 0 end as F
,case when p_name=\'G\' then sum(state) else 0 end as G
,case when p_name=\'H\' then sum(state) else 0 end as H
from sdata
group by Y,M,DD,p_name'));
f_mdata <- sqldf(sprintf('select M,sum(A) as A,sum(B) as B,sum(C) as C,sum(D) as D,sum(E) as E,sum(F) as F,sum(G) as G,sum(H) as H from cwdata where Y=2021 group by M '));
print(f_mdata);
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,DD,p_name,sum(state)as state from data group by Y,M,DD,p_name'));
print(sdata)
cwdata <- sqldf(sprintf('select
Y,M,DD
,case when p_name=\'A\' then sum(state) else 0 end as A
,case when p_name=\'B\' then sum(state) else 0 end as B
,case when p_name=\'C\' then sum(state) else 0 end as C
,case when p_name=\'D\' then sum(state) else 0 end as D
,case when p_name=\'E\' then sum(state) else 0 end as E
,case when p_name=\'F\' then sum(state) else 0 end as F
,case when p_name=\'G\' then sum(state) else 0 end as G
,case when p_name=\'H\' then sum(state) else 0 end as H
from sdata
group by Y,M,DD,p_name'));
f_mdata <- sqldf(sprintf('select M,sum(A) as A,sum(B) as B,sum(C) as C,sum(D) as D,sum(E) as E,sum(F) as F,sum(G) as G,sum(H) as H from cwdata where Y=2021 group by M '));
print(f_mdata);
Rserve::Rserve(args="--RS-enable-remote")
Rserve::Rserve(args="--RS-enable-remote")
Rserve::Rserve(args ="--RS-enable-remote")
Rserve::Rserve(args = "--RS-enable-remote")
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
print(data);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
print(data);
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
print(data);
sdata <- sqldf(sprintf('select * from data where state=1'));
print(sdata);
Sys.Date()
hhh <- function(){
return(Sys.Date())
}
hhh
hhh <- function(){
return(Sys.Date())
}
hhh()
today <- Sys.date()
format(today, format="%m %d %Y")
today <- Sys.Date()
format(today, format="%m %d %Y")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%y")
format(today_m, format="%m")
format(today_d, format="%d")
format(today_y, format="%yy")
format(today_m, format="%m")
format(today_d, format="%d")
format(today_y, format="%%y")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%%y")
format(today_m, format="%m")
format(today_d, format="%d")
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%M")
format(today_d, format="%D")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
strtoday_y <- as.character(today_y)
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
strtoday_y <- as.character(today_y)
mode(today_y)
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
print(data);
sdata <- sqldf(sprintf('select * from data where state=1'));
print(sdata);
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
print(data);
sdata <- sqldf(sprintf('select * from data where state=1'));
ddata <- sqldf(sprintf('select * from sdata where DD=today_d'));
print(ddata);
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
print(data);
sdata <- sqldf(sprintf('select * from data where state=1'));
ddata <- sqldf(sprintf('select * from sdata where DD=\'today_d\''));
print(ddata);
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
print(data);
sdata <- sqldf(sprintf('select * from data where state=1'));
ddata <- sqldf(sprintf("select * from sdata where DD='$today_d"));
print(ddata);
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
library(sqldf);
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
print(data);
sdata <- sqldf(sprintf('select * from data where state=1'));
ddata <- sqldf(sprintf("select * from sdata where DD='$today_d"));
print(ddata);
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
aaaa <- sqldf(sprintf('select * from today_d'))
print(aaaa);
library(sqldf);
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
aaaa <- sqldf(sprintf('select * from today_d'))
print(aaaa);
today_d <- Sys.Date()
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
substr(format,2,2)(today_d, format="%d")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
Sys.Date()
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%D")
today_y <- Sys.Date()
today_m <- Sys.Date()
today_d <- Sys.Date()
format(today_y, format="%Y")
format(today_m, format="%m")
format(today_d, format="%d")
sprintf("%01d", 09)
a<-10
if(a<10){
sprintf("%01d", a)
}
gsub(" 0", " ", format(today_d, format="%d"))
gsub(" 0", " ", format(Sys.Date(), "%Y, %m, %d"))
today_yy <- gsub(" 0", " ", format(Sys.Date(), "%Y"))
today_yy <- gsub(" 0", " ", format(Sys.Date(), "%Y"))
pirnt(today_yy);
today_yy <- gsub(" 0", " ", format(Sys.Date(), "%Y"))
print(today_yy);
today_dd <- gsub(" 0", " ", format(Sys.Date(), "%d"))
print(today_dd);
today_yy <- gsub(" 0", " ", format(Sys.Date(), "%Y, %m, %d"))
gsub(" 0", " ", format(Sys.Date(), "%Y, %m, %d"))
today_y <- Sys.Date()
today_y <- Sys.Date()
print(today_y)
today_dd <- gsub(" 0", " ", format(Sys.Date(), format="%d"))
print(today_dd);
gsub(" 0", " ", Sys.Date())
gsub(" 0", " ", Sys.Date())
today_tt<-gsub(" 0", " ", format(Sys.Date(), "%Y, %m, %d"))
print(today_tt[2])
Rserve::Rserve(args = "--RS-enable-remote")
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,DD,hh,p_name,sum(state)as state from data group by Y,M,DD,hh,p_name'));
cwdata <- sqldf(sprintf('select
Y,M,DD,hh
,case when p_name=\'A\' then sum(state) else 0 end as A
,case when p_name=\'B\' then sum(state) else 0 end as B
,case when p_name=\'C\' then sum(state) else 0 end as C
,case when p_name=\'D\' then sum(state) else 0 end as D
,case when p_name=\'E\' then sum(state) else 0 end as E
,case when p_name=\'F\' then sum(state) else 0 end as F
,case when p_name=\'G\' then sum(state) else 0 end as G
,case when p_name=\'H\' then sum(state) else 0 end as H
from sdata
group by Y,M,DD,hh,P_name'));
print(cwdata)
f_hdata <- sqldf(sprintf('select
hh, sum(A) as A, sum(B) as B, sum(C) as C,
sum(D) as D, sum(E) as E, sum(F) as F, sum(G) as G, sum(H) as H
from cwdata
where Y=%s and M=%s and DD=%s group by hh',Fyesday_y,final_yesday_m,final_yesday_d));
print(f_hdata)
data <- read.csv("ran_parking_test.log",header = F,fileEncoding = "utf-8");
names(data) <- c('Y','M','DD','hh','mm','ss','p_name','state');
sdata <- sqldf(sprintf('select Y,M,DD,hh,p_name,sum(state)as state from data group by Y,M,DD,hh,p_name'));
cwdata <- sqldf(sprintf('select
Y,M,DD,hh
,case when p_name=\'A\' then sum(state) else 0 end as A
,case when p_name=\'B\' then sum(state) else 0 end as B
,case when p_name=\'C\' then sum(state) else 0 end as C
,case when p_name=\'D\' then sum(state) else 0 end as D
,case when p_name=\'E\' then sum(state) else 0 end as E
,case when p_name=\'F\' then sum(state) else 0 end as F
,case when p_name=\'G\' then sum(state) else 0 end as G
,case when p_name=\'H\' then sum(state) else 0 end as H
from sdata
group by Y,M,DD,hh,P_name'));
print(cwdata)
Rserve::Rserve(args = "--RS-enable-remote")
View(cwdata)
Rserve::Rserve(args = "--RS-enable-remote")
Rserve::Rserve(args = "--RS-enable-remote")
Rserve::Rserve(args = "--RS-enable-remote")
Rserve::Rserve(args = "--RS-enable-remote")
Rserve::Rserve(args = "--RS-enable-remote")
